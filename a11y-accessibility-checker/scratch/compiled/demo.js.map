{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/demo/ts/Demo.ts","webpack:///./src/main/ts/Plugin.ts"],"names":[],"mappings":"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","file":"demo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/demo/ts/Demo.ts\");\n","import { TinyMCE } from 'tinymce';\r\n\r\nimport Plugin from '../../main/ts/Plugin';\r\n\r\ndeclare let tinymce: TinyMCE;\r\n\r\nPlugin();\r\n\r\ntinymce.init({\r\n  selector: 'textarea.tinymce',\r\n  plugins: 'code a11y-accessibility-checker',\r\n  toolbar: 'a11y-accessibility-checker'\r\n});\r\n","import { Editor, TinyMCE } from 'tinymce';\r\n\r\ndeclare const tinymce: TinyMCE;\r\n\r\nconst setup = (editor: Editor): void => {\r\n  editor.ui.registry.addButton('a11y-accessibility-checker', {\r\n    text: 'Accessibility Checker',\r\n    onAction: () => {\r\n      const content = editor.getContent();\r\n\r\n      // Open the initial checking dialog\r\n      const dialog = editor.windowManager.open({\r\n        title: 'Accessibility Checker',\r\n        body: {\r\n          type: 'panel',\r\n          items: [\r\n            {\r\n              type: 'htmlpanel', // Use an HTML panel to show the checking status\r\n              html: '<p id=\"a11y-status\">Checking...</p>'\r\n            }\r\n          ]\r\n        },\r\n        buttons: [],\r\n        onClose: () => {}\r\n      });\r\n\r\n      fetch('/check-accessibility', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ html: content })\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.blob();\r\n        } else {\r\n          return response.text().then(error => { throw new Error(error); });\r\n        }\r\n      })\r\n      .then(blob => {\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'report.xslx';\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n\r\n        // Update the dialog content\r\n        dialog.redial({\r\n          title: 'Accessibility Checker',\r\n          body: {\r\n            type: 'panel',\r\n            items: [\r\n              {\r\n                type: 'htmlpanel',\r\n                html: '<p id=\"a11y-status\">Download ready</p>'\r\n              }\r\n            ]\r\n          },\r\n          buttons: [\r\n            {\r\n              type: 'cancel',\r\n              text: 'Close',\r\n              primary: true\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(error => {\r\n        // Update the dialog content in case of error\r\n        dialog.redial({\r\n          title: 'Accessibility Checker',\r\n          body: {\r\n            type: 'panel',\r\n            items: [\r\n              {\r\n                type: 'htmlpanel',\r\n                html: `<p id=\"a11y-status\">Error: ${error.message}</p>`\r\n              }\r\n            ]\r\n          },\r\n          buttons: [\r\n            {\r\n              type: 'cancel',\r\n              text: 'Close',\r\n              primary: true\r\n            }\r\n          ]\r\n        });\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport default (): void => {\r\n  tinymce.PluginManager.add('a11y-accessibility-checker', setup);\r\n};\r\n"],"sourceRoot":""}